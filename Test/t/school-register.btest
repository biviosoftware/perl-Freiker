# Copyright (c) 2005 bivio Software, Inc. All rights reserved.
# $Id$
test_setup('Freiker');
home_page();
school_delete(my($zip) = '123456789');
go_back();
follow_link('register your school');
my($email) = generate_local_email('big-wheel');
submit_form('Register School' => {
    'Your Name:' => 'Big Wheel',
    'Your Email:' => $email,
    'Password:' => 'password',
    'Re-enter Password:' => 'password',
    'Official Name:' => 'Big Wheel School',
    'US ZIP+4:' => $zip,
    'Website:' => 'http://big-wheel-school.org',
});
submit_form(Save => {
    'Teacher_0' => 'Mr.',
    'First Name_0' => 'Teacher',
    'Last Name_0' => 'First',
    'Class Size_0' => '11',
    'Grade_0' => '1st',
    'Teacher_1' => 'Ms.',
    'First Name_1' => 'Teacher',
    'Last Name_1' => 'Second',
    'Class Size_1' => '99',
    'Grade_1' => '2nd',
    'Teacher_3' => 'Ms.',
    'First Name_3' => 'Teacher',
    'Last Name_3' => 'Third',
    'Class Size_3' => '88',
    'Grade_3' => '3rd',
});
verify_text(qr/First.*11.*Second.*99/s);
submit_form('Save');
my($school) = get_uri() =~ m{http://[^/]+/(\w+)};
my($code) = $school;
follow_link('upload');
$code++;
my($freiker1) = $code++;
my($freiker2) = $code++;
my($freiker3) = $code++;
my($freiker4) = $code++;
use Bivio::Type::Date;
my($_D) = 'Bivio::Type::Date';
my($rides) = [map(
    $_D->add_days($_D->now, $_),
    0, -1, -2, -3,
)];
my($rides_s) = [map($_D->to_string($_), @$rides)];
submit_form(Upload => {
    'Barcode File:' => file_field($_D->to_file_name($rides->[0]), <<"EOF"),
$freiker1 $rides_s->[1]
$freiker1,@{[sprintf('%04d/%02d/%02d', ($_D->to_parts($rides->[2]))[5,4,3])]}
$freiker1
$freiker2 $rides_s->[1]
$freiker3
$freiker4
$freiker4 $rides_s->[3]
@{[$code++]}
@{[$code++]}
EOF
});
my($v) = {};
$code = $school;
my($first_name_label);
follow_link('freikers');
do_table_rows(Barcode => sub {
    my($row, $index) = @_;
    $first_name_label = (grep(/First/i, keys(%$row)))[0];
    $code++;
    die($row->{Barcode}->get('text'), " ne $code")
	unless $row->{Barcode}->get('text') eq $code;
    $v->{"Class_$index"} = $index == 2 ? 'Select Class'
	: $index % 2 ? '1st Mr. Teacher First'
	: '2nd Ms. Teacher Second';
    $v->{"${first_name_label}_$index"} = $index == 1
	# ' ' is coupled with FreikerInfoForm->EMPTY_NAME
	? ' ' : "first-$code";
    return 1;
});
submit_form(Assign => $v);
follow_link('account');
submit_form(Change => {
    'Current Password:' => 'password',
    'New Password:' => 'password',
    'Re-enter New Password:' => 'password',
});
follow_link('freikers');
verify_form($v);
do_logout();

follow_link('SWITCH FREIKER');
submit_form(Login => {
    'Your Barcode:' => $freiker1,
    'Most Recent Ride:' => $rides_s->[0],
    # Order shouldn't matter
    'Ride Before Last:' => $rides_s->[2],
    'Three Rides Ago:' => $rides_s->[1],
});
verify_text(qr{Updated:.*$rides_s->[0].*Year:.*>3<.*Ride:.*$rides_s->[0]}is);
follow_link('SWITCH FREIKER');
submit_form(Login => {
    'Your Barcode:' => $freiker2,
    'Most Recent Ride:' => $rides_s->[1],
});
submit_form(Update => $v = {
    'Your First Name:' => 'Freiker 2',
    'Your Teacher:' => '3rd Ms. Teacher Third',
});
verify_text(qr{Updated:.*$rides_s->[0].*Year:.*>1<.*Ride:.*$rides_s->[1]}is);
follow_link('account');
verify_form($v);

# Merge
login_as_wheel($email);
follow_link('freikers');
submit_form(Assign => {
    map((
	"Class_$_" => '1st Mr. Teacher First',
	"${first_name_label}_$_" => 'same name' . ($_ =~ /1|2/ ? 1 : 2),
    ), 0, 1, 2, 3),
});
test_deviance('overlap');
submit_form('Merge');
test_conformance();
follow_link($freiker4);
submit_form(Delete => {
    'Delete?_0' => 1,
});
submit_form('Merge');
verify_no_text($freiker3);
verify_no_text($freiker4);
follow_link('rankings');
do_table_rows(Rides => sub {
    my($row, $index) = @_;
    Bivio::Die->die($row)
        unless ({
	    $freiker1 => 4,
	    $freiker2 => 2,
	    # Should not be found
	    $freiker3 => 99,
	    $freiker4 => 99,
	}->{$row->{Barcode}->get('text')} || 1) == $row->{Rides}->get('text');
    return 1;
});
