# Copyright (c) 2012 bivio Software, Inc.  All Rights Reserved.
# $Id$
my($child_id);
FormModel({
    setup_request => sub {
	model('ManualRideList' => {
	    parent_id => $child_id,
	});
    },
});
req()->set_realm_and_user(qw(bunit123456789 adm));
$child_id = model('FreikerCodeList')->load_all
    ->find_row_by_code('1234')
    ->get('FreikerCode.user_id');
DateTime()->set_test_now(DateTime('2/1/2012 0:0:0'));
[
    error_case({
	'Ride.ride_date_0' => Date('1/2/2012'),
	'Ride.ride_type_0' => RideType('UNKNOWN')->as_sql_param,
	empty_row_count => 9,
    } => {
	'Ride.ride_type_0' => 'UNSPECIFIED',
    }),
    [{
	'Ride.ride_date_0' => Date('1/2/2012'),
	'Ride.ride_type_0' => RideType('BUS')->as_sql_param,
	empty_row_count => 9,
    }] => [{
	'Model.Ride' => {
	    user_id => $child_id,
	    ride_date => Date('1/2/2012'),
	    ride_type => RideType('BUS'),
	},
    }],
    error_case({
	'Ride.ride_date_0' => Date('1/2/2012'),
	'Ride.ride_type_0' => RideType('WALK')->as_sql_param,
	empty_row_count => 9,
    } => {
	'Ride.ride_date_0' => 'EXISTS',
    }),
    error_case({
	# Future
	'Ride.ride_date_0' => Date('2/1/2012'),
	'Ride.ride_type_0' => RideType('WALK')->as_sql_param,
	empty_row_count => 9,
    } => {
	'Ride.ride_date_0' => 'DATE_RANGE',
    }),
    error_case({
	# Weekend
	'Ride.ride_date_0' => Date('1/7/2012'),
	'Ride.ride_type_0' => RideType('WALK')->as_sql_param,
	empty_row_count => 9,
    } => {
	'Ride.ride_date_0' => 'SYNTAX_ERROR',
    }),
];
